# -*- coding: utf-8 -*-
"""michaelwesoloski_Drinks_Assignment.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HnsrNa9BsVkh4SQSqVoKSS_ygtrHsF8p
"""

import pandas as pd

drinks = pd.read_csv('http://bit.ly/drinksbycountry')

drinks.head()

"""### Q1 Change the index to country"""

drinks.set_index('country',inplace=True)

drinks.reset_index(inplace=True)

drinks.head()

"""### Q2 Change the name of the columns starting with capital each word. Add spaces between the words. Continent shoul be between Country and Beer Servings"""

drinks.rename({'country':'Country','beer_servings':'Beer Servings','spirit_servings':'Spirit Servings','wine_servings' : 'Wine Servings','total_litres_of_pure_alcohol' : 'Total Litres Of Pure Alcohol','continent' : 'Continent'},axis=1,inplace=True)

columns_titles = ["Country","Continent","Beer Servings","Spirit Servings","Wine Servings","Total Litres Of Pure Alcohol"]
drinks=drinks.reindex(columns=columns_titles)

drinks=drinks[['Country','Continent','Beer Servings','Spirit Servings','Wine Servings','Total Litres Of Pure Alcohol']]

drinks.head()

"""### Q3 Print a table with the top ten countries with the highest Spirit Serving and Beer Serving diference."""

drinks['difference']=abs( drinks['Spirit Servings']-drinks['Beer Servings'])
drinks.sort_values('difference',ascending=False).loc[:,['Country','difference']].head(10)

drinks.loc[abs(drinks['Spirit Servings']-drinks['Beer Servings']).sort_values(ascending=False).index,['Country','Beer Servings','Spirit Servings']]

drinks.loc[abs(drinks['Beer Servings']-drinks['Spirit Servings']).sort_values(ascending=False).index,['Country']].head(10)

"""### Q4 Find the country with the highest pure_alcohol serving."""

drinks.sort_values('Total Litres Of Pure Alcohol',ascending=False).iloc[0,0]

drinks.sort_values('Total Litres Of Pure Alcohol',ascending=False).loc[:,['Country','Total Litres Of Pure Alcohol']].head(5)

"""### Q5 Make a list of the top ten countries with the highest drinks serving of any type."""

drinks.loc[(drinks['Beer Servings']+drinks['Spirit Servings']+drinks['Wine Servings']).sort_values(ascending=False).index,'Country'].head(10)

"""### Q6 Make a list of the country of each continent with the highest Beer Serving."""

drinks.sort_values('Beer Servings',ascending=False).drop_duplicates('Continent').loc[:,['Country','Beer Servings','Continent']].set_index('Country')

drinks.groupby(['Continent','Country'])['Beer Servings'].sum().sort_values(ascending=False).reset_index().drop_duplicates('Continent')

"""### Q7 Show a table with the max, min, and ave Beer Servings for each continent."""

drinks.groupby('Continent')['Beer Servings'].describe().loc[:,['max','min','mean']]

drinks.groupby('Continent')['Beer Servings'].agg(['max','min','mean'])

"""### Q8 Make a table with the country with the highest Wine Servings starting with each letter.(e.g. From all the countrys starting with letter A, B, C,...)"""

drinks['Letter']=drinks['Country'].str[0]

drinks.sort_values('Wine Servings',ascending=False).drop_duplicates('Letter').sort_values('Country').loc[:,['Country','Wine Servings']].set_index('Country')

drinks

"""### Q9 Make a table with the most popular serving per continent."""

drinks.groupby('Continent')['Wine Servings','Beer Servings','Spirit Servings'].sum().idxmax(axis=1)

"""### Q10 Add a column to the dataset with the most popular drink per country. Use the following dictionary."""

{'Beer Servings':'Beer','Spirit Servings':'Spirit','Wine Servings':'Wine','Total Litres of Pure Alcohol':'Alcohol'}

drinks['Popular Drink']=[(drinks['Beer']+drinks['Spirit']+drinks['Wine']).sort_values(ascending=False).head(10)

drinks.rename({'Beer Servings':'Beer','Spirit Servings':'Spirit','Wine Servings':'Wine'},axis=1,inplace=True)

drinks['Popular Drink']=drinks.groupby('Country')['Wine','Beer','Spirit'].sum().idxmax(axis=1)

"""### Q11 Find the total number of serving per continent using the continent population. Use the following dictionary."""

{'Asia':4581757408, 'Europe':738849000, 'Africa':1216130000, 'North America':579024000, 'South America':422535000,
       'Oceania':38304000}

